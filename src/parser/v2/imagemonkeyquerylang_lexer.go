// Code generated from ../grammar/ImagemonkeyQueryLang.g4 by ANTLR 4.7.1. DO NOT EDIT.

package imagemonkeyquerylang

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 23, 315,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 3, 2, 3, 2,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7,
	3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11,
	3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13,
	3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3,
	14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3,
	17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 5, 18, 152,
	10, 18, 3, 19, 6, 19, 155, 10, 19, 13, 19, 14, 19, 156, 3, 19, 3, 19, 6,
	19, 161, 10, 19, 13, 19, 14, 19, 162, 5, 19, 165, 10, 19, 3, 19, 7, 19,
	168, 10, 19, 12, 19, 14, 19, 171, 11, 19, 3, 19, 3, 19, 7, 19, 175, 10,
	19, 12, 19, 14, 19, 178, 11, 19, 3, 19, 3, 19, 6, 19, 182, 10, 19, 13,
	19, 14, 19, 183, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20,
	6, 20, 194, 10, 20, 13, 20, 14, 20, 195, 3, 20, 3, 20, 3, 20, 3, 21, 3,
	21, 6, 21, 203, 10, 21, 13, 21, 14, 21, 204, 3, 21, 3, 21, 3, 21, 3, 21,
	3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 6, 21, 219, 10,
	21, 13, 21, 14, 21, 220, 3, 21, 3, 21, 3, 22, 3, 22, 6, 22, 227, 10, 22,
	13, 22, 14, 22, 228, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3,
	22, 3, 22, 3, 22, 3, 22, 3, 22, 6, 22, 243, 10, 22, 13, 22, 14, 22, 244,
	3, 22, 3, 22, 3, 23, 3, 23, 6, 23, 251, 10, 23, 13, 23, 14, 23, 252, 3,
	23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23,
	3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 7, 24, 272, 10, 24, 12, 24, 14,
	24, 275, 11, 24, 3, 24, 3, 24, 5, 24, 279, 10, 24, 3, 25, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3,
	26, 6, 26, 295, 10, 26, 13, 26, 14, 26, 296, 3, 27, 3, 27, 3, 28, 3, 28,
	3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 6, 32, 310, 10, 32, 13,
	32, 14, 32, 311, 3, 32, 3, 32, 2, 2, 33, 3, 2, 5, 2, 7, 2, 9, 2, 11, 2,
	13, 2, 15, 2, 17, 2, 19, 2, 21, 2, 23, 3, 25, 4, 27, 5, 29, 6, 31, 7, 33,
	8, 35, 9, 37, 10, 39, 11, 41, 12, 43, 13, 45, 14, 47, 15, 49, 16, 51, 17,
	53, 18, 55, 19, 57, 20, 59, 21, 61, 22, 63, 23, 3, 2, 19, 3, 2, 99, 124,
	3, 2, 67, 92, 4, 2, 67, 92, 99, 124, 5, 2, 34, 34, 67, 92, 99, 124, 5,
	2, 50, 59, 67, 92, 99, 124, 4, 2, 70, 70, 102, 102, 4, 2, 71, 71, 103,
	103, 4, 2, 85, 85, 117, 117, 4, 2, 69, 69, 101, 101, 4, 2, 67, 67, 99,
	99, 4, 2, 62, 62, 64, 64, 4, 2, 81, 81, 113, 113, 4, 2, 84, 84, 116, 116,
	4, 2, 68, 68, 100, 100, 4, 2, 91, 91, 123, 123, 3, 2, 50, 59, 5, 2, 11,
	12, 15, 15, 34, 34, 2, 326, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27,
	3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2,
	35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2,
	2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2,
	2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2,
	2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 3, 65, 3,
	2, 2, 2, 5, 67, 3, 2, 2, 2, 7, 69, 3, 2, 2, 2, 9, 71, 3, 2, 2, 2, 11, 73,
	3, 2, 2, 2, 13, 78, 3, 2, 2, 2, 15, 80, 3, 2, 2, 2, 17, 82, 3, 2, 2, 2,
	19, 84, 3, 2, 2, 2, 21, 89, 3, 2, 2, 2, 23, 93, 3, 2, 2, 2, 25, 95, 3,
	2, 2, 2, 27, 115, 3, 2, 2, 2, 29, 127, 3, 2, 2, 2, 31, 140, 3, 2, 2, 2,
	33, 142, 3, 2, 2, 2, 35, 151, 3, 2, 2, 2, 37, 154, 3, 2, 2, 2, 39, 187,
	3, 2, 2, 2, 41, 200, 3, 2, 2, 2, 43, 224, 3, 2, 2, 2, 45, 248, 3, 2, 2,
	2, 47, 278, 3, 2, 2, 2, 49, 280, 3, 2, 2, 2, 51, 294, 3, 2, 2, 2, 53, 298,
	3, 2, 2, 2, 55, 300, 3, 2, 2, 2, 57, 302, 3, 2, 2, 2, 59, 304, 3, 2, 2,
	2, 61, 306, 3, 2, 2, 2, 63, 309, 3, 2, 2, 2, 65, 66, 9, 2, 2, 2, 66, 4,
	3, 2, 2, 2, 67, 68, 9, 3, 2, 2, 68, 6, 3, 2, 2, 2, 69, 70, 9, 4, 2, 2,
	70, 8, 3, 2, 2, 2, 71, 72, 9, 5, 2, 2, 72, 10, 3, 2, 2, 2, 73, 74, 9, 6,
	2, 2, 74, 75, 9, 6, 2, 2, 75, 76, 9, 6, 2, 2, 76, 77, 9, 6, 2, 2, 77, 12,
	3, 2, 2, 2, 78, 79, 7, 34, 2, 2, 79, 14, 3, 2, 2, 2, 80, 81, 7, 97, 2,
	2, 81, 16, 3, 2, 2, 2, 82, 83, 7, 49, 2, 2, 83, 18, 3, 2, 2, 2, 84, 85,
	9, 7, 2, 2, 85, 86, 9, 8, 2, 2, 86, 87, 9, 9, 2, 2, 87, 88, 9, 10, 2, 2,
	88, 20, 3, 2, 2, 2, 89, 90, 9, 11, 2, 2, 90, 91, 9, 9, 2, 2, 91, 92, 9,
	10, 2, 2, 92, 22, 3, 2, 2, 2, 93, 94, 7, 35, 2, 2, 94, 24, 3, 2, 2, 2,
	95, 96, 7, 99, 2, 2, 96, 97, 7, 112, 2, 2, 97, 98, 7, 112, 2, 2, 98, 99,
	7, 113, 2, 2, 99, 100, 7, 118, 2, 2, 100, 101, 7, 99, 2, 2, 101, 102, 7,
	118, 2, 2, 102, 103, 7, 107, 2, 2, 103, 104, 7, 113, 2, 2, 104, 105, 7,
	112, 2, 2, 105, 106, 7, 48, 2, 2, 106, 107, 7, 101, 2, 2, 107, 108, 7,
	113, 2, 2, 108, 109, 7, 120, 2, 2, 109, 110, 7, 103, 2, 2, 110, 111, 7,
	116, 2, 2, 111, 112, 7, 99, 2, 2, 112, 113, 7, 105, 2, 2, 113, 114, 7,
	103, 2, 2, 114, 26, 3, 2, 2, 2, 115, 116, 7, 107, 2, 2, 116, 117, 7, 111,
	2, 2, 117, 118, 7, 99, 2, 2, 118, 119, 7, 105, 2, 2, 119, 120, 7, 103,
	2, 2, 120, 121, 7, 48, 2, 2, 121, 122, 7, 121, 2, 2, 122, 123, 7, 107,
	2, 2, 123, 124, 7, 102, 2, 2, 124, 125, 7, 118, 2, 2, 125, 126, 7, 106,
	2, 2, 126, 28, 3, 2, 2, 2, 127, 128, 7, 107, 2, 2, 128, 129, 7, 111, 2,
	2, 129, 130, 7, 99, 2, 2, 130, 131, 7, 105, 2, 2, 131, 132, 7, 103, 2,
	2, 132, 133, 7, 48, 2, 2, 133, 134, 7, 106, 2, 2, 134, 135, 7, 103, 2,
	2, 135, 136, 7, 107, 2, 2, 136, 137, 7, 105, 2, 2, 137, 138, 7, 106, 2,
	2, 138, 139, 7, 118, 2, 2, 139, 30, 3, 2, 2, 2, 140, 141, 7, 39, 2, 2,
	141, 32, 3, 2, 2, 2, 142, 143, 7, 114, 2, 2, 143, 144, 7, 122, 2, 2, 144,
	34, 3, 2, 2, 2, 145, 152, 9, 12, 2, 2, 146, 147, 7, 64, 2, 2, 147, 152,
	7, 63, 2, 2, 148, 152, 7, 63, 2, 2, 149, 150, 7, 62, 2, 2, 150, 152, 7,
	63, 2, 2, 151, 145, 3, 2, 2, 2, 151, 146, 3, 2, 2, 2, 151, 148, 3, 2, 2,
	2, 151, 149, 3, 2, 2, 2, 152, 36, 3, 2, 2, 2, 153, 155, 5, 7, 4, 2, 154,
	153, 3, 2, 2, 2, 155, 156, 3, 2, 2, 2, 156, 154, 3, 2, 2, 2, 156, 157,
	3, 2, 2, 2, 157, 164, 3, 2, 2, 2, 158, 160, 7, 48, 2, 2, 159, 161, 5, 7,
	4, 2, 160, 159, 3, 2, 2, 2, 161, 162, 3, 2, 2, 2, 162, 160, 3, 2, 2, 2,
	162, 163, 3, 2, 2, 2, 163, 165, 3, 2, 2, 2, 164, 158, 3, 2, 2, 2, 164,
	165, 3, 2, 2, 2, 165, 169, 3, 2, 2, 2, 166, 168, 5, 13, 7, 2, 167, 166,
	3, 2, 2, 2, 168, 171, 3, 2, 2, 2, 169, 167, 3, 2, 2, 2, 169, 170, 3, 2,
	2, 2, 170, 172, 3, 2, 2, 2, 171, 169, 3, 2, 2, 2, 172, 176, 7, 63, 2, 2,
	173, 175, 5, 13, 7, 2, 174, 173, 3, 2, 2, 2, 175, 178, 3, 2, 2, 2, 176,
	174, 3, 2, 2, 2, 176, 177, 3, 2, 2, 2, 177, 179, 3, 2, 2, 2, 178, 176,
	3, 2, 2, 2, 179, 181, 7, 41, 2, 2, 180, 182, 5, 9, 5, 2, 181, 180, 3, 2,
	2, 2, 182, 183, 3, 2, 2, 2, 183, 181, 3, 2, 2, 2, 183, 184, 3, 2, 2, 2,
	184, 185, 3, 2, 2, 2, 185, 186, 7, 41, 2, 2, 186, 38, 3, 2, 2, 2, 187,
	188, 9, 13, 2, 2, 188, 189, 9, 14, 2, 2, 189, 190, 9, 7, 2, 2, 190, 191,
	9, 8, 2, 2, 191, 193, 9, 14, 2, 2, 192, 194, 5, 13, 7, 2, 193, 192, 3,
	2, 2, 2, 194, 195, 3, 2, 2, 2, 195, 193, 3, 2, 2, 2, 195, 196, 3, 2, 2,
	2, 196, 197, 3, 2, 2, 2, 197, 198, 9, 15, 2, 2, 198, 199, 9, 16, 2, 2,
	199, 40, 3, 2, 2, 2, 200, 202, 5, 39, 20, 2, 201, 203, 5, 13, 7, 2, 202,
	201, 3, 2, 2, 2, 203, 204, 3, 2, 2, 2, 204, 202, 3, 2, 2, 2, 204, 205,
	3, 2, 2, 2, 205, 206, 3, 2, 2, 2, 206, 207, 7, 120, 2, 2, 207, 208, 7,
	99, 2, 2, 208, 209, 7, 110, 2, 2, 209, 210, 7, 107, 2, 2, 210, 211, 7,
	102, 2, 2, 211, 212, 7, 99, 2, 2, 212, 213, 7, 118, 2, 2, 213, 214, 7,
	107, 2, 2, 214, 215, 7, 113, 2, 2, 215, 216, 7, 112, 2, 2, 216, 218, 3,
	2, 2, 2, 217, 219, 5, 13, 7, 2, 218, 217, 3, 2, 2, 2, 219, 220, 3, 2, 2,
	2, 220, 218, 3, 2, 2, 2, 220, 221, 3, 2, 2, 2, 221, 222, 3, 2, 2, 2, 222,
	223, 5, 19, 10, 2, 223, 42, 3, 2, 2, 2, 224, 226, 5, 39, 20, 2, 225, 227,
	5, 13, 7, 2, 226, 225, 3, 2, 2, 2, 227, 228, 3, 2, 2, 2, 228, 226, 3, 2,
	2, 2, 228, 229, 3, 2, 2, 2, 229, 230, 3, 2, 2, 2, 230, 231, 7, 120, 2,
	2, 231, 232, 7, 99, 2, 2, 232, 233, 7, 110, 2, 2, 233, 234, 7, 107, 2,
	2, 234, 235, 7, 102, 2, 2, 235, 236, 7, 99, 2, 2, 236, 237, 7, 118, 2,
	2, 237, 238, 7, 107, 2, 2, 238, 239, 7, 113, 2, 2, 239, 240, 7, 112, 2,
	2, 240, 242, 3, 2, 2, 2, 241, 243, 5, 13, 7, 2, 242, 241, 3, 2, 2, 2, 243,
	244, 3, 2, 2, 2, 244, 242, 3, 2, 2, 2, 244, 245, 3, 2, 2, 2, 245, 246,
	3, 2, 2, 2, 246, 247, 5, 21, 11, 2, 247, 44, 3, 2, 2, 2, 248, 250, 5, 39,
	20, 2, 249, 251, 5, 13, 7, 2, 250, 249, 3, 2, 2, 2, 251, 252, 3, 2, 2,
	2, 252, 250, 3, 2, 2, 2, 252, 253, 3, 2, 2, 2, 253, 254, 3, 2, 2, 2, 254,
	255, 7, 120, 2, 2, 255, 256, 7, 99, 2, 2, 256, 257, 7, 110, 2, 2, 257,
	258, 7, 107, 2, 2, 258, 259, 7, 102, 2, 2, 259, 260, 7, 99, 2, 2, 260,
	261, 7, 118, 2, 2, 261, 262, 7, 107, 2, 2, 262, 263, 7, 113, 2, 2, 263,
	264, 7, 112, 2, 2, 264, 46, 3, 2, 2, 2, 265, 279, 5, 7, 4, 2, 266, 273,
	5, 7, 4, 2, 267, 272, 5, 13, 7, 2, 268, 272, 5, 7, 4, 2, 269, 272, 5, 15,
	8, 2, 270, 272, 5, 17, 9, 2, 271, 267, 3, 2, 2, 2, 271, 268, 3, 2, 2, 2,
	271, 269, 3, 2, 2, 2, 271, 270, 3, 2, 2, 2, 272, 275, 3, 2, 2, 2, 273,
	271, 3, 2, 2, 2, 273, 274, 3, 2, 2, 2, 274, 276, 3, 2, 2, 2, 275, 273,
	3, 2, 2, 2, 276, 277, 5, 7, 4, 2, 277, 279, 3, 2, 2, 2, 278, 265, 3, 2,
	2, 2, 278, 266, 3, 2, 2, 2, 279, 48, 3, 2, 2, 2, 280, 281, 5, 11, 6, 2,
	281, 282, 5, 11, 6, 2, 282, 283, 7, 47, 2, 2, 283, 284, 5, 11, 6, 2, 284,
	285, 7, 47, 2, 2, 285, 286, 5, 11, 6, 2, 286, 287, 7, 47, 2, 2, 287, 288,
	5, 11, 6, 2, 288, 289, 7, 47, 2, 2, 289, 290, 5, 11, 6, 2, 290, 291, 5,
	11, 6, 2, 291, 292, 5, 11, 6, 2, 292, 50, 3, 2, 2, 2, 293, 295, 9, 17,
	2, 2, 294, 293, 3, 2, 2, 2, 295, 296, 3, 2, 2, 2, 296, 294, 3, 2, 2, 2,
	296, 297, 3, 2, 2, 2, 297, 52, 3, 2, 2, 2, 298, 299, 7, 40, 2, 2, 299,
	54, 3, 2, 2, 2, 300, 301, 7, 126, 2, 2, 301, 56, 3, 2, 2, 2, 302, 303,
	7, 128, 2, 2, 303, 58, 3, 2, 2, 2, 304, 305, 7, 42, 2, 2, 305, 60, 3, 2,
	2, 2, 306, 307, 7, 43, 2, 2, 307, 62, 3, 2, 2, 2, 308, 310, 9, 18, 2, 2,
	309, 308, 3, 2, 2, 2, 310, 311, 3, 2, 2, 2, 311, 309, 3, 2, 2, 2, 311,
	312, 3, 2, 2, 2, 312, 313, 3, 2, 2, 2, 313, 314, 8, 32, 2, 2, 314, 64,
	3, 2, 2, 2, 21, 2, 151, 156, 162, 164, 169, 176, 183, 195, 204, 220, 228,
	244, 252, 271, 273, 278, 296, 311, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'!'", "'annotation.coverage'", "'image.width'", "'image.height'",
	"'%'", "'px'", "", "", "", "", "", "", "", "", "", "'&'", "'|'", "'~'",
	"'('", "')'",
}

var lexerSymbolicNames = []string{
	"", "SEP", "ANNOTATION_COVERAGE_PREFIX", "IMAGE_WIDTH_PREFIX", "IMAGE_HEIGHT_PREFIX",
	"PERCENT", "PIXEL", "OPERATOR", "ASSIGNMENT", "ORDER_BY", "ORDER_BY_VALIDATION_DESC",
	"ORDER_BY_VALIDATION_ASC", "ORDER_BY_VALIDATION", "LABEL", "UUID", "VAL",
	"AND", "OR", "NOT", "LPAR", "RPAR", "SKIPPED_TOKENS",
}

var lexerRuleNames = []string{
	"LOWERCASE", "UPPERCASE", "UPPERLOWERCASE", "UPPERLOWERCASEWS", "UUIDBLOCK",
	"WS", "UNDERSCORE", "SLASH", "DESC", "ASC", "SEP", "ANNOTATION_COVERAGE_PREFIX",
	"IMAGE_WIDTH_PREFIX", "IMAGE_HEIGHT_PREFIX", "PERCENT", "PIXEL", "OPERATOR",
	"ASSIGNMENT", "ORDER_BY", "ORDER_BY_VALIDATION_DESC", "ORDER_BY_VALIDATION_ASC",
	"ORDER_BY_VALIDATION", "LABEL", "UUID", "VAL", "AND", "OR", "NOT", "LPAR",
	"RPAR", "SKIPPED_TOKENS",
}

type ImagemonkeyQueryLangLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewImagemonkeyQueryLangLexer(input antlr.CharStream) *ImagemonkeyQueryLangLexer {

	l := new(ImagemonkeyQueryLangLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ImagemonkeyQueryLang.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ImagemonkeyQueryLangLexer tokens.
const (
	ImagemonkeyQueryLangLexerSEP                        = 1
	ImagemonkeyQueryLangLexerANNOTATION_COVERAGE_PREFIX = 2
	ImagemonkeyQueryLangLexerIMAGE_WIDTH_PREFIX         = 3
	ImagemonkeyQueryLangLexerIMAGE_HEIGHT_PREFIX        = 4
	ImagemonkeyQueryLangLexerPERCENT                    = 5
	ImagemonkeyQueryLangLexerPIXEL                      = 6
	ImagemonkeyQueryLangLexerOPERATOR                   = 7
	ImagemonkeyQueryLangLexerASSIGNMENT                 = 8
	ImagemonkeyQueryLangLexerORDER_BY                   = 9
	ImagemonkeyQueryLangLexerORDER_BY_VALIDATION_DESC   = 10
	ImagemonkeyQueryLangLexerORDER_BY_VALIDATION_ASC    = 11
	ImagemonkeyQueryLangLexerORDER_BY_VALIDATION        = 12
	ImagemonkeyQueryLangLexerLABEL                      = 13
	ImagemonkeyQueryLangLexerUUID                       = 14
	ImagemonkeyQueryLangLexerVAL                        = 15
	ImagemonkeyQueryLangLexerAND                        = 16
	ImagemonkeyQueryLangLexerOR                         = 17
	ImagemonkeyQueryLangLexerNOT                        = 18
	ImagemonkeyQueryLangLexerLPAR                       = 19
	ImagemonkeyQueryLangLexerRPAR                       = 20
	ImagemonkeyQueryLangLexerSKIPPED_TOKENS             = 21
)
